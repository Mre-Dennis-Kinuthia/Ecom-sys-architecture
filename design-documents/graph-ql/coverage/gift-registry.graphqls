type Customer {
    gitft_registry_list: [GiftRegistry]
    gitft_registry(id: ID!): GiftRegistry
}

type Query {
    giftRegistryTypes: [GiftRegistryType] @doc(description: "Get a list of available gift registry types")
    giftRegistrySearch(
        registrant_firstname: String!,
        registrant_lastname: String!,
        gift_registry_type_id: ID,
        searchable_dynamic_attributes: [GiftRegistryDynamicAttributeInput] @doc(description: "For select attributes ID should be provided expected. For range search, '_from' and '_to' suffixes can be added to the attribute code. For text attributes provide value for exact matching.")
    ): [GiftRegistry] @doc(description: "Gift registry search by registrant name and additional searchable attributes.")
}

type Mutation {
    createGiftRegistry(gift_registry: CreateGiftRegistryInput): CreateGiftRegistryOutput
    updateGiftRegistry(id: ID!, gift_registry: UpdateGiftRegistryInput): UpdateGiftRegistryOutput
}

input UpdateGiftRegistryInput {
    event_name: String
    type_id: String
    message: String
    privacy_settings: GiftRegistryPrivacySettings
    status: GiftRegistryStatus
    registrants: [UpdateGiftRegistryRegistrantInput!] @doc(description: "As a result of the update, only the records of provided registrants will be affected. If the registrant is missing in the request, its attributes will not be changed")
    shipping_address: GiftRegistryShippingAddressInput
    dynamic_attributes: [GiftRegistryDynamicAttributeInput!] @doc(description: "As a result of the update, only the values of provided attributes will be affected. If the attribute is missing in the request, its value will not be changed")
}

input CreateGiftRegistryInput {
    event_name: String!
    type_id: String!
    message: String!
    privacy_settings: GiftRegistryPrivacySettings!
    status: GiftRegistryStatus!
    registrants: [CreateGiftRegistryRegistrantInput!]!
    shipping_address: GiftRegistryShippingAddressInput
    dynamic_attributes: [GiftRegistryDynamicAttributeInput]
}

type GiftRegistryShippingAddressInput @doc(description: "Either address data or address ID should be provided") {
    address_data: CustomerAddressInput
    address_id: Int
}

type UpdateGiftRegistryRegistrantInput {
    id: ID!
    first_name: String
    last_name: String
    email: String
    dynamic_attributes: [GiftRegistryDynamicAttributeInput] @doc(description: "As a result of the update, only the values of provided attributes will be affected. If the attribute is missing in the request, its value will not be changed")
}

type CreateGiftRegistryRegistrantInput {
    first_name: String!
    last_name: String!
    email: String!
    dynamic_attributes: [GiftRegistryDynamicAttributeInput]
}

type GiftRegistryDynamicAttributeInput {
    code: ID!
    value: String!
}

type CreateGiftRegistryOutput {
    gift_registry: GiftRegistry
}

type UpdateGiftRegistryOutput {
    gift_registry: GiftRegistry
}

type GiftRegistryType {
    id: ID!
    label: String!
    dynamic_attributes_metadata: [GiftRegistryDynamicAttributeMetadataInterface]
}

interface GiftRegistryDynamicAttributeMetadataInterface {
    code: ID!
    input_type: String!
    attribute_group: String!
    label: String!
    is_required: Boolean!
    sort_order: Int
}

type GiftRegistryTextAttributeMetadata implements GiftRegistryDynamicAttributeMetadataInterface {
}

type GiftRegistrySelectAttributeMetadata implements GiftRegistryDynamicAttributeMetadataInterface, GiftRegistrySelectAttributeMetadataInterface {
}

type GiftRegistryDateAttributeMetadata implements GiftRegistryDynamicAttributeMetadataInterface {
    format: GiftRegistryDateAttributeFormat!
}

enum GiftRegistryDateAttributeFormat {
    SHORT
    MEDIUM
    LONG
    FULL
}

type GiftRegistryCountryAttributeMetadata implements GiftRegistryDynamicAttributeMetadataInterface {
    show_region: Boolean!
}

type GiftRegistryEventCountryAttributeMetadata implements GiftRegistryDynamicAttributeMetadataInterface, GiftRegistrySearcheableAttributeMetadataInterface {
    show_region: Boolean!
}

type GiftRegistryEventDateAttributeMetadata implements GiftRegistryDynamicAttributeMetadataInterface, GiftRegistrySearcheableAttributeMetadataInterface {
    format: GiftRegistryDateAttributeFormat!
}

type GiftRegistryEventLocationAttributeMetadata implements GiftRegistryDynamicAttributeMetadataInterface, GiftRegistrySearcheableAttributeMetadataInterface {
}

type GiftRegistryRoleAttributeMetadata implements GiftRegistryDynamicAttributeMetadataInterface, GiftRegistrySearcheableAttributeMetadataInterface, GiftRegistrySelectAttributeMetadataInterface {
}

interface GiftRegistrySearcheableAttributeMetadataInterface {
    is_searcheable: Boolean!
}

interface GiftRegistrySelectAttributeMetadataInterface {
    options: [GiftRegistrySelectAttributeOptionMetadata]
}

type GiftRegistrySelectAttributeOptionMetadata {
    code: ID!
    label: String!
    is_default: Boolean
}

type GiftRegistry {
    id: ID!
    event_name: String!
    type: GiftRegistryType
    message: String!
    created_on: String! @doc(description: "Creation date") @doc(description: "Accessible to the registry owner only")
    privacy_settings: GiftRegistryPrivacySettings! @doc(description: "Accessible to the registry owner only")
    status: GiftRegistryStatus! @doc(description: "Accessible to the registry owner only")
    owner_name: String!
    registrants: [GiftRegistryRegistrant]
    shipping_address: CustomerAddress @doc(description: "Accessible to the registry owner only")
    dynamic_attributes: [GiftRegistryDynamicAttribute]
    items: [GiftRegistryItemInterface]
}

type GiftRegistryItemInterface {
    id: String!
    quantity: Float!
    quantity_fulfilled: Float!
    note: String
    added_on: String!
    product: ProductInterface
}

type SimpleGiftRegistryItem implements GiftRegistryItemInterface {
    customizable_options: [SelectedCustomizableOption]
}

type BundleGiftRegistryItem implements GiftRegistryItemInterface {
    customizable_options: [SelectedCustomizableOption]
    bundle_options: [SelectedBundleOption!]
}

type ConfigurableGiftRegistryItem implements GiftRegistryItemInterface {
    customizable_options: [SelectedCustomizableOption]
    configurable_options: [SelectedConfigurableOption!]
}

type DownloadableGiftRegistryItem implements GiftRegistryItemInterface @doc(description: "Not currently supported by Magento core") {
    customizable_options: [SelectedCustomizableOption]
    links: [DownloadableProductLinks]
    samples: [DownloadableProductSamples]
}

type VirtualGiftRegistryItem implements GiftRegistryItemInterface @doc(description: "Not currently supported by Magento core") {
    customizable_options: [SelectedCustomizableOption]
}

type GiftCardGiftRegistryItem implements GiftRegistryItemInterface @doc(description: "Not currently supported by Magento core") {
    sender_name: String!
    recepient_name: String!
    amount: Money!
    message: String
    customizable_options: [SelectedCustomizableOption]
}

interface GiftRegistryDynamicAttributeInterface  {
    code: ID!
    label: String!
    value: String!
}

type GiftRegistryDynamicAttribute implements GiftRegistryDynamicAttributeInterface {
    group: GiftRegistryDynamicAttributeGroup!
}

type GiftRegistryRegistrantDynamicAttribute implements GiftRegistryDynamicAttributeInterface {

}

enum GiftRegistryDynamicAttributeGroup {
    GENERAL_INFORMATION
    EVENT_INFORMATION
    PRIVACY_SETTINGS
    DETAILED_INFORMATION
    SHIPPING_ADDRESS
}

type GiftRegistryRegistrant {
    id: ID!
    first_name: String!
    last_name: String!
    email: String! @doc(description: "Accessible to the registry owner only")
    dynamic_attributes: [GiftRegistryRegistrantDynamicAttribute]
}

enum GiftRegistryStatus {
    ACTIVE
    INACTIVE
}

enum GiftRegistryPrivacySettings {
    PRIVATE
    PUBLIC
}

type StoreConfig {
    magento_giftregistry_general_enabled : String
    magento_giftregistry_general_max_registrant : String
}

# This directicve is declared here to make the schema valid. It is already declared in Magento
directive @doc(description: String="") on QUERY
    | MUTATION
    | FIELD
    | FRAGMENT_DEFINITION
    | FRAGMENT_SPREAD
    | INLINE_FRAGMENT
    | SCHEMA
    | SCALAR
    | OBJECT
    | FIELD_DEFINITION
    | ARGUMENT_DEFINITION
    | INTERFACE
    | UNION
    | ENUM
    | ENUM_VALUE
    | INPUT_OBJECT
    | INPUT_FIELD_DEFINITION
