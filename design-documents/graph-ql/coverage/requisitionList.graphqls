# Requistion List Flow User Flow
#
# 1.1. Create a requistion List at Customer's My Account section using `createRequistionList` Mutation
#
# 1.2. From catalog pages search for products and add products to already available list with `addProductsToRequisitionList`
#  mutation or create a list with `createRequistionList` and on success add products with `addProductsToRequisitionList`
#
# 1.3. Select a requistion list from My Account and  customer query `requisitionLists` with id filter will fetch requistion
# list details
#
# 1.4 Select a list of items from the requisition List and perform `addRequisitionListItemToCart`, so the items are copied
# to cart
#
# 1.5 perform regular checkout flow
#
# 2. In requistion list view, `exportRequisitionList` query will generate a CSV file with particular requistion list data
#
# 3. In requistion list view, `renameRequistionList` mutatation can be used to rename the list
#
# 4. In requistion list view, one can edit items quantity, options etc or remove items with `removeRequisitionListItems` and
# `updateRequisitionListItems` mutation
#
# 5. In requistion list view, select requistion list items and move them , copy them to different requistion list with
# `moveItemsFromRequisitionList` and `copyItemsFromRequisitionList` mutations respectively
#

type Customer {
    "Get Requisition Lists of customer"
    requisitionLists(
        pageSize: Int = 20,
        currentPage: Int = 1,
        filter: RequisitionListFilterInput
    ): RequisitionLists
}

"""
Provides Customer's Requisition Lists
"""
type RequisitionLists  {
    "List of Requisition Lists"
    items: [RequisitionList]
    "Page Information for pagination"
    page_info: SearchResultPageInfo
    "Total count of Requisition Lists"
    total_count: Int
}

"""
Requisition List Type
"""
type RequisitionList {
    "Unique Identifier of Requisition List"
    id: ID!
    "Name of the list"
    name: String!
    "Description of the list"
    description: String
    "Items in the list"
    items: [RequisitionListItemInterface]
    "Number of items in list"
    items_count: Int!
    "Latest Activity"
    updated_at: String
}

"""
Interface type for Requisition List Item
"""
interface RequisitionListItemInterface {
    "Unique Identifier of Requisition List Item"
    id: ID!
    product: ProductInterface!
    "Quantity added"
    qty: Float!
}

"""
Requisition List Item Implementation that for Simple and Virtual Products
"""
type DefaultRequisitionListItem implements RequisitionListItemInterface {
    "Unique Identifier of Requisition List Item"
    id: ID!
    product: ProductInterface!
    "Quantity added"
    qty: Float!
    "custom Option selected"
    customizable_options: [SelectedCustomizableOption]
}

"""
Requisition List Item Implementation that for Downloadable Products
"""
type DownloadableRequisitionListItem implements RequisitionListItemInterface {
    "Unique Identifier of Requisition List Item"
    id: ID!
    product: ProductInterface!
    "Quantity added"
    qty: Float!
    "custom Option selected"
    customizable_options: [SelectedCustomizableOption]
    "DownloadableProductLinks defines characteristics of a downloadable product"
    links: [DownloadableProductLinks]
    "DownloadableProductSamples defines characteristics of a downloadable product"
    samples: [DownloadableProductSamples]
}

"""
Requisition List Item Implementation that for Bundle Products
"""
type BundleRequisitionListItem implements RequisitionListItemInterface {
    "Unique Identifier of Requisition List Item"
    id: ID!
    product: ProductInterface!
    "Quantity added"
    qty: Float!
    "custom Option selected"
    customizable_options: [SelectedCustomizableOption]
    "selected bundle options"
    bundle_options: [SelectedBundleOption]!
}

"""
Requisition List Item Implementation that for Configurable Products
"""
type ConfigurableRequisitionListItem implements RequisitionListItemInterface {
    "Unique Identifier of Requisition List Item"
    id: ID!
    product: ProductInterface!
    "Quantity added"
    qty: Float!
    "custom Option selected"
    customizable_options: [SelectedCustomizableOption]
    "Configurable options selected"
    configurable_options: [SelectedConfigurableOption]
}

type Mutation {

    """
    Create Empty Requisition List
    """
    createRequisitionList(
        "name for the list"
        name: String!,
        "description For the list"
        description: String
    ): CreateRequisitionListOutput

    """
    Rename a requisition list and change description"
    """
    renameRequisitionList(
        "unique Id of requisition list"
        id: ID!,
        "new name for list"
        name: String!,
        "new description For the List"
        description: String
    ): RenameRequisitionListOutput

    """
    Delete a requisition list with Id
    """
    deleteRequisitionList(
        "unique Id of requisition list"
        id: ID!
    ): DeleteRequisitionListOutput

    """
    Add items to requisition list
    """
    addProductsToRequisitionList(
        "unique Id of requisition list"
        id: ID!,
        "Products to be added to requisition list"
        items: [RequisitionListItemsInput!]!
    ): AddProductsToRequisitionListOutput

    """
    Remove Items in requisition list
    """
    removeRequisitionListItems(
        "unique Id of requisition list"
        id: ID!,
        "unique Ids of Items to be removed from requisition list"
        items: [ID!]!
    ): RemoveRequisitionListItemsOutput

    """
    Update Items in requisition list"
    """
    updateRequisitionListItems(
        "unique Id of requisition list"
        id: ID!,
        "Items to be updated from requisition list"
        items: [UpdateRequisitionListItemsInput!]!
    ): UpdateRequisitionListItemsOutput

    """
    Add Requisition List Items To Customer Cart"
    """
    addRequisitionListItemToCart(
        "unique Id of requisition list"
        requisition_list_id: ID!,
        "selected requisition list items that are to be added"
        item_ids: [ID!]!
    ): AddRequisitionListItemToCartOutput

    """
    Copy Items from Requisition List to another requisition list"
    """
    copyItemsBetweenRequisitionList(
        "unique Id of source requisition list"
        source_id: ID!,
        "unique Id of destination requisition list"
        destination_id: ID, # If null new requisition list will be created
        "selected requisition list items that are to be copied from source"
        item_ids: [ID!]!
    ): CopyItemsFromRequisitionListOutput

    """
    Move Items from Requisition List to another requisition List
    """
    moveItemsBetweenRequisitionList(
        "unique Id of source requisition list"
        source_id: ID!,
        "unique Id of destination requisition list"
        destination_id: ID, # If null new requisition list will be created
        "selected requisition list items that are to be moved from source"
        item_ids: [ID!]!
    ): MoveItemsFromRequisitionListOutput
}

type RemoveRequisitionListItemsOutput {
    requisition_list : RequisitionList
}

type UpdateRequisitionListItemsOutput {
    requisition_list : RequisitionList
}

type AddProductsToRequisitionListOutput {
    requisition_list : RequisitionList
}

input RequisitionListFilterInput {
    "Filter Customer Requisition lists with an requisition list ID or list of requisition list IDs"
    ids: FilterEqualTypeInput,
    "Filter by display name of the Requisition list"
    name: FilterMatchTypeInput
}

input RequisitionListItemsInput {
    sku: String!
    quantity: Float
    parent_sku: String
    "selected option ID"
    selected_options: [String!]
    "entered Options ID"
    entered_options: [EnteredOptionInput!]
}

input UpdateRequisitionListItemsInput {
    "unique ID of Requisition List Item"
    item_id: ID!
    customizable_options: [CustomizableOptionInput]
    quantity: Float
}

type CreateRequisitionListOutput {
    list: RequisitionList
}

type RenameRequisitionListOutput {
    list: RequisitionList
}

type DeleteRequisitionListOutput {
    result: Boolean
}

type AddRequisitionListItemToCartOutput {
    cart: Cart # since requisition list is not mutated it is not part of the output
}

type CopyItemsFromRequisitionListOutput {
    "Destination Requisition List"
    list : RequisitionList # since source requisition list is not mutated it is not part of the output
}

type MoveItemsFromRequisitionListOutput {
    "Source Requisition List"
    source : RequisitionList
    "Destination Requisition List"
    destination : RequisitionList
}
