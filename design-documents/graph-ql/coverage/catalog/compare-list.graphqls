type ComparableItem {
    productId: ID! @doc(description: "Product Id")
    name: String! @doc(description: "Product name")
    sku: String! @doc(description: "Product SKU")
    priceRange: ProductPriceRange! @doc(description: "Product prices")
    canonical_url: String @doc(description: "Product URL")
    images: [ProductImage]! @doc(description: "Product Images")
    values: [ProductAttribute]! @doc(description: "Product comparable attributes")
}

type ComparableAttribute {
    code: String! @doc(description: "Attribute code ")
    title: String! @doc(description: "Attribute display title")
}

type CompareList {
    uid: ID! @doc(description: "Compare list id")
    items: [ComparableItem] @doc(description: "Comparable products")
    attributes: [ComparableAttribute] @doc(description: "Comparable attributes, provides codes and titles for the attributes")
}

type Customer {
    compareList(uid: ID): [CompareList] @doc(description: "Active customers compare list") #id is optional. Introduces the possibility of more than 1 compare list.
}

type Query {
    compareList(uid: ID!): CompareList @doc(description: "Compare list")
}

type Mutation {
    createCompareList(input: CreateCompareListInput): CompareList @doc(description: "Creates a new compare list. For a logged in user, the created list is assigned to the user")
    addItemsToCompareList(
        uid: ID!,
        items: [ID!]
    ): CompareList
    removeItemsFromCompareList(
        uid: ID!,
        items: [ID!]
    ): CompareList
    assignCompareListToCustomer(customerId: ID!, uid: ID!): Boolean!
    deleteCompareList(uid: ID!): Boolean!
}

input CreateCompareListInput {
    items: [ID!]
}

schema {
    query: Query,
    mutation: Mutation
}
