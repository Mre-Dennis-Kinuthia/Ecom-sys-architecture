type Query{
    # See https://github.com/magento/architecture/blob/master/design-documents/graph-ql/framework/attributes-metadata.md
    pageSpecificCustomAttributes(
        page_type: CustomAttributesPageEnum!
    ): CustomAttributeMetadata
}

type Mutation {
    createReturn(input: CreateReturnInput!): CreateReturnOutput @doc(description: "Create a new return.")
    addReturnComment(input: AddReturnCommentInput!): AddReturnCommentOutput @doc(description: "Add a comment to an existing return.")
}

input CreateReturnInput {
    items: [CreateReturnItemInput]!
    comment_text: String
    # Do we need contact_email? It is present in the form when requesting return as a guest
}

input CreateReturnItemInput {
    order_item_id: ID!
    quantity_to_return: Float!
    selected_custom_attributes: [ID!]
    entered_custom_attributes: [EnteredCustomAttributeInput!]
}

input EnteredCustomAttributeInput {
    id: ID!
    value: String!
}

type CreateReturnOutput {
    return: Return
}

input AddReturnCommentInput {
    return_id: ID!
    comment_text: String!
}

type AddReturnCommentOutput {
    return: Return
}

enum CustomAttributesPageEnum {
    RETURN_ITEM_EDIT_FORM
    RETURN_ITEMS_LISTING
    # See https://github.com/magento/architecture/blob/master/design-documents/graph-ql/framework/attributes-metadata.md
    # PRODUCTS_COMPARE
    # PRODUCTS_LISTING
    # ADVANCED_CATALOG_SEARCH
}

type Customer {
    returns(
        pageSize: Int = 20 @doc(description: "Specifies the maximum number of results to return at once. Defaults to 20."),
        currentPage: Int = 1 @doc(description: "Specifies which page of results to return. The default value is 1."),
    ): Returns @doc(description: "Information about the customer returns.")
    return(id: ID!): Return @doc(description: "Get customer return details by its ID.")
}

type CustomerOrder {
    returns(
        pageSize: Int = 20 @doc(description: "Specifies the maximum number of results to return at once. Defaults to 20."),
        currentPage: Int = 1 @doc(description: "Specifies which page of results to return. The default value is 1."),
    ): Returns @doc(description: "Information about the order returns.")
    items_eligible_for_return: [OrderItemInterface] @doc(description: "A list of order items eligible for return.")
}

type Returns {
    items: [Return] @doc(description: "List of returns")
    page_info: SearchResultPageInfo @doc(description: "Pagination metadata")
    total_count: Int @doc(description: "Total count of customer returns")
}

type Return @doc(description: "Customer return") {
    id: ID! @doc(description: "Return number")
    order_id: String! @doc(description: "ID of the order based on which the return was created.")
    creation_date: String! @doc(description: "The date when the return was requested.")
    customer_email: String! @doc(description: "Email of the customer who created the return.")
    customer_name: String @doc(description: "The name of the person returning the item")
    status: ReturnStatus @doc(description: "Return status.")
    shipping: ReturnShipping @doc(description: "Shipping information for the return.")
    comments: [ReturnComment] @doc(description: "A list of comments posted for the return.")
    items: [ReturnItem] @doc(description: "A list of items being returned.")
}

type ReturnItem {
    id: ID!
    product: ProductInterface!
    # Do we need reference to order ID? How about entered and selected options
    custom_attributes: [CustomAttribute]
    request_quantity: Float!
    quantity: Float!
    # TODO: Should enums be separated for Return and Return item?
    status: ReturnStatus!
}

# See https://github.com/magento/architecture/blob/master/design-documents/graph-ql/custom-attributes-container.md
type CustomAttribute {
    id: ID!
    label: String!
    value: String! @doc(description: "JSON encoded value of the attribute.")
}

type ReturnComment {
    id: ID! @doc(description: "Comment ID.")
    created_by: String! @doc(description: "The name of the user who created posted the comment.")
    created_at: String! @doc(description: "The date and time when the comment was posted.")
    text: String! @doc(description: "The comment text.")
}

type ReturnShipping {
    address: ReturnShippingAddress
    # Tracking is not currently supported by Magento
    tracking: ReturnShippingTracking
}

type ReturnShippingTracking {
    id: ID!
    shipping_method: String
    carier: String
    tracking_number: String
    status: String
}

type ReturnShippingAddress {
    contact_name: String
    street: [String]!
    city: String!
    region: Region!
    postcode: String!
    country: Country!
    telephone: String
}

enum ReturnStatus {
    PENDING
    AUTHORIZED
    PARTIALLY_AUTHORIZED
    RECEIVED
    RECEIVED_ON_ITEM
    APPROVED
    APPROVED_ON_ITEM
    REJECTED
    REJECTED_ON_ITEM
    DENIED
    CLOSED
    PROCESSED_CLOSED
}

type StoreConfig {
    sales_magento_rma_enabled @doc(description: "Returns functionality status on the storefront: enabled/disabled.")
}
